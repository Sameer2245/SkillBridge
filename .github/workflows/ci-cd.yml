name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test-frontend:
    name: Test Frontend
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: client/package-lock.json
        
    - name: Install dependencies
      run: |
        cd client
        npm ci
        
    - name: Run linting
      run: |
        cd client
        npm run lint --if-present
        
    - name: Run tests
      run: |
        cd client
        npm test -- --coverage --watchAll=false
        
    - name: Build application
      run: |
        cd client
        npm run build
      env:
        REACT_APP_SERVER_URL: http://localhost:5000
        REACT_APP_STRIPE_PUBLISHABLE_KEY: pk_test_dummy_key

  test-backend:
    name: Test Backend
    runs-on: ubuntu-latest
    
    services:
      mongodb:
        image: mongo:5.0
        env:
          MONGO_INITDB_DATABASE: test
        ports:
          - 27017:27017
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: server/package-lock.json
        
    - name: Install dependencies
      run: |
        cd server
        npm ci
        
    - name: Run linting
      run: |
        cd server
        npm run lint --if-present
        
    - name: Run tests
      run: |
        cd server
        npm test --if-present
      env:
        NODE_ENV: test
        MONGO_URI: mongodb://localhost:27017/test
        JWT_SECRET: test_jwt_secret

  deploy-production:
    name: Deploy to Production
    needs: [test-frontend, test-backend]
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Deploy Frontend to Vercel
      uses: amondnet/vercel-action@v25
      with:
        vercel-token: ${{ secrets.VERCEL_TOKEN }}
        vercel-args: '--prod'
        vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
        vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
        working-directory: ./client
        
    - name: Deploy Backend to Railway
      run: |
        npm install -g @railway/cli
        railway up --service ${{ secrets.RAILWAY_SERVICE_NAME }}
      env:
        RAILWAY_TOKEN: ${{ secrets.RAILWAY_TOKEN }}
        
    - name: Health Check
      run: |
        sleep 60
        curl -f ${{ secrets.RAILWAY_URL }}/health || exit 1
        
    - name: Notify Success
      run: echo "ðŸš€ Deployment successful!"
